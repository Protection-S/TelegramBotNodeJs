const connection = require('./database');
const { bot } = require('./app');

const keyboard = [
  [{ text: '/help' }],
  [{ text: '/site' }],
  [{ text: '/creator' }]
];

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:', {
    reply_markup: {
      keyboard: keyboard,
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  });
});

bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id;
  const helpMessage = `
  –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:
  /site - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç –æ–∫—Ç–∞–≥–æ–Ω–∞
  /creator - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç –º–æ–µ –§–ò–û
  /randomItem - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –ë–î
  /deleteItem (id –æ–±—ä–µ–∫—Ç–∞, —Å–∫–æ–±–∫–∏ –Ω–µ –ø–∏—Å–∞—Ç—å) - —É–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –ë–î –ø–æ ID
  /getItemByID (id –æ–±—ä–µ–∫—Ç–∞, —Å–∫–æ–±–∫–∏ –Ω–µ –ø–∏—Å–∞—Ç—å)- –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –ë–î –ø–æ ID
  /getAllItems - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ –ë–î
  /addItem (name;description) - –¥–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥–º–µ—Ç –≤ –ë–î
  /updateItem (id;name;description) - –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–µ–¥–º–µ—Ç –≤ –ë–î
  /startChat - –Ω–∞—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç
  /stopChat - –∑–∞–≤–µ—Ä—à–∏—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç
  !qr –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä qr-–∫–æ–¥–∞
  !webscr –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –≤–µ–±-—Å–∞–π—Ç–∞
  `;
  bot.sendMessage(chatId, helpMessage);
});

bot.onText(/\/site/, (msg) => {
  const chatId = msg.chat.id;
  const siteUrl = 'https://students.forus.ru/';
  bot.sendMessage(chatId, `–°–∞–π—Ç –æ–∫—Ç–∞–≥–æ–Ω–∞: ${siteUrl}`);
});

bot.onText(/\/creator/, (msg) => {
  const chatId = msg.chat.id;
  const creatorInfo = '–ë–∞–Ω–Ω–∏–∫–æ–≤ –ú–∞–∫—Å–∏–º –ë–µ—Å–∏–∫–æ–≤–∏—á';
  bot.sendMessage(chatId, `–ï–≥–æ –≤–µ–ª–∏—á–µ—Å—Ç–≤–æ: ${creatorInfo}`);
});

bot.onText(/\/randomItem/, (msg) => {
  const chatId = msg.chat.id;
  connection.query('SELECT * FROM items ORDER BY RAND() LIMIT 1', (err, results) => {
    if (err) {
      bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.');
      console.error(err);
    } else if (results.length > 0) {
      const item = results[0];
      bot.sendMessage(chatId, `(${item.id}) - ${item.name}: ${item.description}`);
    } else {
      bot.sendMessage(chatId, '–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤.');
    }
  });
});

bot.onText(/\/deleteItem (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const itemId = match[1];

  connection.query('DELETE FROM items WHERE id = ?', [itemId], (err, results) => {
    if (err) {
      bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞.');
      console.error(err);
    } else if (results.affectedRows > 0) {
      bot.sendMessage(chatId, '–ü—Ä–µ–¥–º–µ—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.');
    } else {
      bot.sendMessage(chatId, '–û—à–∏–±–∫–∞: –ø—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    }
  });
});

bot.onText(/\/getItemByID (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const itemId = match[1];

  connection.query('SELECT * FROM items WHERE id = ?', [itemId], (err, results) => {
    if (err) {
      bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞.');
      console.error(err);
    } else if (results.length > 0) {
      const item = results[0];
      bot.sendMessage(chatId, `(${item.id}) - ${item.name}: ${item.description}`);
    } else {
      bot.sendMessage(chatId, '–û—à–∏–±–∫–∞: –ø—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    }
  });
});

bot.onText(/\/getAllItems/, (msg) => {
  const chatId = msg.chat.id;
  connection.query('SELECT * FROM items', (err, results) => {
    if (err) {
      bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤.');
      console.error(err);
    } else if (results.length > 0) {
      let response = '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:\n';
      results.forEach(item => {
        response += `(${item.id}) - ${item.name}: ${item.description}\n`;
      });
      bot.sendMessage(chatId, response);
    } else {
      bot.sendMessage(chatId, '–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤.');
    }
  });
});

bot.onText(/\/addItem (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const itemData = match[1].split(';');
  const [name, description] = itemData;

  if (name && description) {
    connection.query('INSERT INTO items (name, description) VALUES (?, ?)', [name, description], (err, results) => {
      if (err) {
        bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞.');
        console.error(err);
      } else {
        bot.sendMessage(chatId, '–ü—Ä–µ–¥–º–µ—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.');
      }
    });
  } else {
    bot.sendMessage(chatId, '–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –û–∂–∏–¥–∞–µ—Ç—Å—è "name;description".');
  }
});

bot.onText(/\/updateItem (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const itemData = match[1].split(';');
  const [id, name, description] = itemData;

  if (id && name && description) {
    connection.query('UPDATE items SET name = ?, description = ? WHERE id = ?', [name, description, id], (err, results) => {
      if (err) {
        bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞.');
        console.error(err);
      } else if (results.affectedRows > 0) {
        bot.sendMessage(chatId, '–ü—Ä–µ–¥–º–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.');
      } else {
        bot.sendMessage(chatId, '–û—à–∏–±–∫–∞: –ø—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.');
      }
    });
  } else {
    bot.sendMessage(chatId, '–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –û–∂–∏–¥–∞–µ—Ç—Å—è "id;name;description".');
  }
});

bot.onText(/^\!webscr/, (msg) => {
  const userId = msg.from.id;
  const url = msg.text.substring(8).trim();
  const image = "https://api.letsvalidate.com/v1/thumbs/?url=" + encodeURIComponent(url) + "&width=1280&height=720";
  bot.sendMessage(msg.chat.id, `[üì∑](${image}) –ü—Ä–∏–≤–µ—Ç–∏–∫: ${url}`, {parse_mode: "MarkdownV2"});
});

bot.onText(/^\!qr/, (msg) => {
  const userId = msg.from.id;
  const data = msg.text.substring(4).trim();
  const imageqr = "https://api.qrserver.com/v1/create-qr-code/?size=250x250&data=" + encodeURIComponent(data);
  bot.sendMessage(msg.chat.id, `[‚úèÔ∏è](${imageqr}) –í–∞—à QR –∫–æ–¥: ${data}`, {parse_mode: "MarkdownV2"});
});
