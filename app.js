const TelegramBot = require('node-telegram-bot-api');
const mysql = require("mysql2");

const token = '7432819616:AAFcIcDQ8_kC5HgFDRHJnDRt3araladJ92o';

const bot = new TelegramBot(token, {polling: true});

const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'ChatBotTests'
});

connection.connect(err=>{
  if(err){
      console.error('Error connection to the DB'. err.stack);
      return;
  }

  console.log('Connected to the DB')
});



const keyboard = [
  [{ text: '/help' }],
  [{ text: '/site' }],
  [{ text: '/creator' }]
];

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:', {
    reply_markup: {
      keyboard: keyboard,
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  });
});

bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id;
  const helpMessage = `
  –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:
  /site - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç –æ–∫—Ç–∞–≥–æ–Ω–∞
  /creator - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç –º–æ–µ –§–ò–û
  /randomItem - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –ë–î
  /deleteItem (id –æ–±—ä–µ–∫—Ç–∞, —Å–∫–æ–±–∫–∏ –Ω–µ –ø–∏—Å–∞—Ç—å) - —É–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –ë–î –ø–æ ID
  /getItemByID (id –æ–±—ä–µ–∫—Ç–∞, —Å–∫–æ–±–∫–∏ –Ω–µ –ø–∏—Å–∞—Ç—å)- –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –ë–î –ø–æ ID
  !qr –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä qr-–∫–æ–¥–∞
  !websqr –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –≤–µ–±-—Å–∞–π—Ç–∞
  `;
  bot.sendMessage(chatId, helpMessage);
});

bot.onText(/\/site/, (msg) => {
  const chatId = msg.chat.id;
  const siteUrl = 'https://students.forus.ru/';
  bot.sendMessage(chatId, `–°–∞–π—Ç –æ–∫—Ç–∞–≥–æ–Ω–∞: ${siteUrl}`);
});

bot.onText(/\/creator/, (msg) => {
  const chatId = msg.chat.id;
  const creatorInfo = '–ë–∞–Ω–Ω–∏–∫–æ–≤ –ú–∞–∫—Å–∏–º –ë–µ—Å–∏–∫–æ–≤–∏—á';
  bot.sendMessage(chatId, `–ï–≥–æ –≤–µ–ª–∏—á–µ—Å—Ç–≤–æ: ${creatorInfo}`);
});

bot.onText(/\/randomItem/, (msg) => {
  const chatId = msg.chat.id;
  connection.query('SELECT * FROM items ORDER BY RAND() LIMIT 1', (err, results) => {
    if (err) {
      bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.');
      console.error(err);
    } else if (results.length > 0) {
      const item = results[0];
      bot.sendMessage(chatId, `(${item.id}) - ${item.name}: ${item.description}`);
    } else {
      bot.sendMessage(chatId, '–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤.');
    }
  });
});

bot.onText(/\/deleteItem (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const itemId = match[1];

  connection.query('DELETE FROM items WHERE id = ?', [itemId], (err, results) => {
    if (err) {
      bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞.');
      console.error(err);
    } else if (results.affectedRows > 0) {
      bot.sendMessage(chatId, '–ü—Ä–µ–¥–º–µ—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.');
    } else {
      bot.sendMessage(chatId, '–û—à–∏–±–∫–∞: –ø—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    }
  });
});

bot.onText(/\/getItemByID (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const itemId = match[1];

  connection.query('SELECT * FROM items WHERE id = ?', [itemId], (err, results) => {
    if (err) {
      bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞.');
      console.error(err);
    } else if (results.length > 0) {
      const item = results[0];
      bot.sendMessage(chatId, `(${item.id}) - ${item.name}: ${item.description}`);
    } else {
      bot.sendMessage(chatId, '–û—à–∏–±–∫–∞: –ø—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    }
  });
});

bot.onText(/^\!webscr/, function(msg) {
  console.log(msg);
  var userId = msg.from.id;
  var url = msg.text.substring(8).trim();
  var image = "https://api.letsvalidate.com/v1/thumbs/?url=" + encodeURIComponent(url) + "&width=1280&height=720";
  bot.sendMessage(msg.chat.id, `[üì∑](${image}) –ü—Ä–∏–≤–µ—Ç–∏–∫: ${url}`, {parse_mode : "MarkdownV2"});
});


bot.onText(/^\!qr/, function(msg) {
  console.log(msg);
  var userId = msg.from.id;
  var data = msg.text.substring(4).trim();
  var imageqr = "https://api.qrserver.com/v1/create-qr-code/?size=250x250&data=" + encodeURIComponent(data);
  bot.sendMessage(msg.chat.id, `[‚úèÔ∏è](${imageqr}) –í–∞—à QR –∫–æ–¥: ${data}`, {parse_mode : "MarkdownV2"});
});
